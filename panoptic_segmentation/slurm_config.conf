#!/bin/sh

#SBATCH --job-name=mmor_seg
#SBATCH --output=mmor_seg-%A.out  # Standard output of the script (Can be absolute or relative path). %A adds the job id to the file name so you can launch the same script multiple times and get different logging files
#SBATCH --error=mmor_seg-%A.err  # Standard error of the script
#SBATCH --time=0-160:00:00  # Limit on the total run time (format: days-hours:minutes:seconds)
#SBATCH --gres=gpu:1  # Number of GPUs if needed
#SBATCH --cpus-per-task=12  # Number of CPUs (Don't use more than 24 per GPU)
#SBATCH --mem=126G  # Memory in GB (Don't use more than 126G per GPU), maybe 128?
ulimit -n 4096
# activate corresponding environment
# conda deactivate # If you launch your script from a terminal where your environment is already loaded, conda won't activate the environment. This guards against that. Not necessary if you always run this script from a clean terminal
source ~/miniconda3/etc/profile.d/conda.sh
conda activate MM-OR_seg

# single frame (both MMOR and 4DOR)
python -u train_net_video.py --num-gpus 1 --config-file configs/dvis_Plus/HybridOR/CTVIS_r50.yaml --resume MODEL.WEIGHTS mask2former/ctvis_r50_vspw.pth SOLVER.IMS_PER_BATCH 1
# online temporality (both MMOR and 4DOR)
#python -u train_net_video.py --num-gpus 1 --config-file configs/dvis_Plus/HybridOR/DVIS_Plus_Online_R50.yaml --resume MODEL.WEIGHTS output_CTVIS_R50_HybridOR_withsimstation/model_0099999.pth SOLVER.IMS_PER_BATCH 1
# offline temporality (both MMOR and 4DOR)
#python -u train_net_video.py --num-gpus 1 --config-file configs/dvis_Plus/HybridOR/DVIS_Plus_Offline_R50.yaml --resume MODEL.WEIGHTS output_R50_HybridOR_temporal_online_withsimstation/model_0039999.pth SOLVER.IMS_PER_BATCH 1

# for testing/evaluating any version, use the --eval-only MODEL.WEIGHTS PATH_TO_MODEL.pth, instead of --resume MODEL.WEIGHTS PATH_TO_MODEL.pth